name: MacOS Intel
# triggered events (push, pull_request) for the develop branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

defaults:
  run:
    shell: bash -leo pipefail {0}

env:
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17643/m_HPCKit_p_2021.2.0.2903_offline.dmg
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler
  CC: icc
  FC: ifort
  CXX: icpc

jobs:

  build_macos_cpp:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2

    - name: prepare for cache restore
      run: |
        sudo mkdir -p /opt/intel
        sudo chown $USER /opt/intel
    - name: cache install
      id: cache-install
      uses: actions/cache@v2
      with:
        path: /opt/intel/oneapi
        key: install-${{ env.MACOS_HPCKIT_URL }}-${{ env.MACOS_CPP_COMPONENTS }}
    - name: install
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: |
        curl --output webimage.dmg --url "$MACOS_HPCKIT_URL" --retry 5 --retry-delay 5
        hdiutil attach webimage.dmg
        sudo /Volumes/$(basename $MACOS_HPCKIT_URL .dmg)/bootstrapper.app/Contents/MacOS/bootstrapper -s --action install --components=$MACOS_CPP_COMPONENTS:$MACOS_FORTRAN_COMPONENTS --eula=accept --continue-with-optional-error=yes --log-dir=.
        cat /opt/intel/oneapi/logs/installer.install.intel.oneapi.mac.hpckit.*
        hdiutil detach /Volumes/$(basename "$MACOS_HPCKIT_URL" .dmg) -quiet

    - name: find compilers
      run: |
        source /opt/intel/oneapi/setvars.sh
        which icc
        which ifort
        which mpiicc
        which mpiifort

    # Cache NetCDF
    - name: cache-netcdf
      id: cache-netcdf
      uses: actions/cache@v2
      with:
        path: ~/netcdf
        key: netcdf-c-4.7.4-${{ runner.os }}-intel

    # Build HDF5
    - name: build-hdf5
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh
        export CC=mpiicc
        wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.7/src/hdf5-1.10.7.tar.gz &> /dev/null
        tar -xzf hdf5-1.10.7.tar.gz
        pushd hdf5-1.10.7
        ./configure --prefix=${HOME}/netcdf --enable-parallel --disable-tools --disable-fortran --disable-cxx --enable-parallel-tests
        make -j2
        make install

    # Build NetCDF-C   
    - name: build-netcdf-c
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh
        export CC=mpiicc
        export CPPFLAGS=-I${HOME}/netcdf/include
        export LDFLAGS=-L${HOME}/netcdf/lib
        wget https://www.unidata.ucar.edu/downloads/netcdf/ftp/netcdf-c-4.7.4.tar.gz &> /dev/null
        tar -xzf netcdf-c-4.7.4.tar.gz
        pushd netcdf-c-4.7.4
        ./configure --prefix=${HOME}/netcdf --disable-dap --disable-utilities
        make -j2
        make install

    # Build NetCDF-Fortran
    - name: build-netcdf-fortran
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      run: |
        source /opt/intel/oneapi/setvars.sh
        export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${HOME}/netcdf/lib"
        export PATH="${HOME}/netcdf/bin:$PATH"
        export CC=mpiicc
        export FC=mpiifort
        export CPPFLAGS=-I${HOME}/netcdf/include
        export LDFLAGS=-L${HOME}/netcdf/lib
        wget https://github.com/Unidata/netcdf-fortran/archive/v4.5.3.tar.gz &> /dev/null
        tar -xzf v4.5.3.tar.gz
        pushd netcdf-fortran-4.5.3
        ./configure --prefix=${HOME}/netcdf
        make -j2
        make install

    # Get NetCDF versions
    - name: Get NetCDF version
      run: |
        export PATH="${HOME}/netcdf/bin:$PATH"
        nc-config --version
        nf-config --version

    # Test debug mode
    - name: Test Shallow Water Debug
      run: |
        source /opt/intel/oneapi/setvars.sh
        cd build
        rm -rf *
        export CC=icc
        export FC=ifort
        cmake -DCMAKE_BUILD_TYPE=debug -DCMAKE_PREFIX_PATH='~;~/netcdf' ..
        make VERBOSE=1
        ctest --output-on-failure

    # Test release mode
    - name: Test Shallow Water Release
      run: |
        source /opt/intel/oneapi/setvars.sh
        cd build
        rm -rf *
        export CC=icc
        export FC=ifort
        cmake -DCMAKE_BUILD_TYPE=release -DCMAKE_PREFIX_PATH='~;~/netcdf' ..
        make VERBOSE=1
        ctest --output-on-failure

    # Delete the following if you don't want to save install logs
    - name: Saving install logs
      if: steps.cache-install.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v2
      with:
        name: InstallLogs_${{ github.job }}
        path: |
          bootstrapper*
          installer*
        retention-days: 7

